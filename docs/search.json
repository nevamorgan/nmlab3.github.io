[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lab 3: COVID-19",
    "section": "",
    "text": "library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.3\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\nWarning: package 'tidyr' was built under R version 4.4.3\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\nWarning: package 'lubridate' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(zoo)\n\nWarning: package 'zoo' was built under R version 4.4.3\n\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(flextable)\n\nWarning: package 'flextable' was built under R version 4.4.3\n\n\n\nAttaching package: 'flextable'\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\nurl &lt;- 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'\ncovid &lt;- read.csv(url)"
  },
  {
    "objectID": "index.html#steps",
    "href": "index.html#steps",
    "title": "Lab 3: COVID-19",
    "section": "Steps:",
    "text": "Steps:\nIn this question, we are going to look at the story of 4 states and the impact scale can have on data interpretation. The states include: New York, Colorado, Alabama, and Ohio. Your task is to make a faceted bar plot showing the number of daily, new cases at the state level.\n\nFirst, we need to group/summarize our county level data to the state level, filter it to the four states of interest, and calculate the number of daily new cases (diff/lag) and the 7-day rolling mean.\n\n\nstate_covid &lt;- covid_data |&gt;\n  filter(state %in% c(\"New York\", \"Colorado\", \"Alabama\", \"Ohio\")) |&gt;\n  group_by(county) |&gt;\n  arrange(date) |&gt;\n  mutate(new_cases = cases - lag(cases),\n         new_deaths = deaths - lag(deaths)) |&gt;\n  ungroup()\n\nstate_covid &lt;- state_covid |&gt;\n  group_by(state, county, date, new_cases) |&gt;\n  summarize(daily_new_cases = sum(new_cases, na.rm = TRUE), .groups = \"drop\") |&gt;\n  filter(state %in% c(\"New York\", \"Colorado\", \"Alabama\", \"Ohio\")) |&gt;\n  arrange(state, date)\n\nstate_covid &lt;- state_covid |&gt;\n  mutate(\n    daily_new_cases = new_cases - lag(new_cases, default = 0),\n    rolling_mean_7day = rollmean(daily_new_cases, 7, fill = NA, align = \"right\")\n  ) |&gt;\n  glimpse()\n\nRows: 216,632\nColumns: 6\n$ state             &lt;chr&gt; \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama…\n$ county            &lt;chr&gt; \"Elmore\", \"Jefferson\", \"Limestone\", \"Montgomery\", \"T…\n$ date              &lt;chr&gt; \"2020-03-13\", \"2020-03-13\", \"2020-03-13\", \"2020-03-1…\n$ new_cases         &lt;int&gt; NA, -3, NA, NA, NA, NA, 0, -1, 0, 0, 1, 0, 0, 4, NA,…\n$ daily_new_cases   &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, -1, 1, 0, 1, -1, 0, 4, N…\n$ rolling_mean_7day &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n\n\nUsing the modified data, make a facet plot of the daily new cases and the 7-day rolling mean. Your plot should use compelling geoms, labels, colors, and themes.\n\n\nggplot(state_covid, aes(x = date, y = daily_new_cases, fill = state)) +\n  geom_col(show.legend = FALSE) + \n  geom_line(aes(y = rolling_mean_7day, color = state), linewidth = 1.2) +\n  facet_wrap(~ state, scales = \"free_y\") +\n  labs(\n    title = \"Daily New COVID Cases with 7-Day Rolling Mean\",\n    caption = \"ESS330 Lab 3 Neva Morgan\",\n    x = \"Date\",\n    y = \"New Cases\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 441 rows containing missing values or values outside the scale range\n(`geom_col()`).\n\n\nWarning: Removed 680 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\nThe story of raw case counts can be misleading. To understand why, lets explore the cases per capita of each state. To do this, join the state COVID data to the population estimates and calculate the newcases/totalpopulation. Additionally, calculate the 7-day rolling mean of the new cases per capita counts.\n\n\npop_data &lt;- pop_data |&gt;\n  rename(state = STNAME) |&gt;\n  rename(county = CTYNAME)\n\nstate_pop_data &lt;- pop_data |&gt;\n  filter(state %in% c(\"New York\", \"Colorado\", \"Alabama\", \"Ohio\")) |&gt;\n  group_by(state, county) |&gt;\n  summarize(total_population = sum(POPESTIMATE2021, na.rm = TRUE), .groups = \"drop\")\n\n\nstate_covid_aggregated &lt;- state_covid |&gt;\n  group_by(state, date) |&gt;\n  summarize(daily_new_cases = sum(daily_new_cases, na.rm = TRUE), .groups = \"drop\")\n\nstate_covid_percapita &lt;- state_covid_aggregated |&gt;\n  left_join(state_pop_data, by = \"state\") |&gt;\n  mutate(\n    new_cases_per_capita = daily_new_cases / total_population,\n    rolling_mean_per_capita = rollmean(new_cases_per_capita, 7, fill = NA, align = \"right\")\n  )\n\nWarning in left_join(state_covid_aggregated, state_pop_data, by = \"state\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\nUsing the per capita data, plot the 7-day rolling averages overlying each other (one plot) with compelling labels, colors, and theme.\n\n\nggplot(state_covid_percapita, aes(x = date, y = rolling_mean_per_capita, color = state)) +\n  geom_line(size = 5) +\n  labs(\n    title = \"7-Day Rolling Average of COVID Cases Per Capita\",\n    caption = \"ESS330 Lab 3 Neva Morgan\",\n    x = \"Date\",\n    y = \"New Cases Per Capita\",\n    color = \"State\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\nBriefly describe the influence scaling by population had on the analysis? Does it make some states look better? Some worse? How so?\n\nBy scaling the population with the number of new cases of covid as reflected by the four interested states (New York, Colorado, Alabama, and Ohio), we can understand that Colorado represents a larger portion of the new cases per capita, based on the 7 rolling day averaghe. It makes Ohio, Alabama, and New York look better than what was represented in the daily new cases graph earlier from step 2."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]